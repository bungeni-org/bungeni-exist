#summary script that keeps XML repository in-sync with Bungeni portal
#labels bungenibungeni-existbungeni-portaljythoneXist-db

<wiki:toc max_depth="3" />

= Introduction =

The BungeniGlueScript is a Jython script that provides various options to synchronizes outputs from Bungeni Portal with the eXist-db XML repository, Mainly the raw xml output files that generated in various workflow steps.

= Pre-requisites =

 * Jython (2.5 or greater) - Can be found on the Jython Project website (see [http://www.jython.org/] )
 * Python (2.6.5 or greater) - Comes preinstalled on linux distributions or installed via a package manager. For non-linux machines (see [http://www.python.org/] )

= Setup =

Checkout the framework from svn :

{{{
svn co https://bungeni-exist.googlecode.com/svn/glue/trunk bungeni-glue
}}}

This will download the project to a folder name `bungeni-glue`

= Usage =

The script depends on a several Java libraries which are required to execute the various tasks provided as options. All the dependencies are part of the glue repository project and will be available when you checkout the project.
 
The below snippet shows how to transform raw xml output from Bungeni portal to ontology xml format. 

{{{
./exec.sh -c src/config.ini --transform
}}}

It currently provides four options to execute xml transformation and sync tasks. 

  * po2xml - translate .po files to i18n xml catalogues
  * transform - Converts raw Bungeni xml documents to specific ontology xml
  * synchronize - Synchronizes the XML repository with newly transformed Bungeni output
  * upload - Uploads transformed ontology documents and attachments to the XML repository

All the options have a single-character, short-hand option switch instead of the name.

== po2xml ==

Bungeni portal uses .po files for storing internationalization messages. The eXist-db uses a XML catalogues with key->message elements with the same i18n messages. This option performs this translation.

{{{
./exec.sh -c src/config.ini --po2xml
}}}

The short-hand for transform option is `-p`

== transform ==

The transform option takes raw XML output from Bungeni and converts them to a specific XML ontology format used in the XML-UI. It also extracts archive files with document and attachments found will be transformed and linked accordingly.

{{{
./exec.sh -c src/config.ini --transform
}}}

The short-hand for transform option is `-t`

== synchronize ==

NB: This options requires that `--transform` option has been executed or is executed together with transform.

Synchronize step compares the transformed ontology xmls with the xml collection in eXist-db repository and generated a list of files that will be uploaded to the repository

{{{
./exec.sh -c src/config.ini --synchronize
}}}

The short-hand for synchronize option is `-s`

== upload ==

Upload option checks the output folders with transformed documents or any attachments and uploads them to 

{{{
./exec.sh -c src/config.ini --upload
}}}

The short-hand for transform option is `-u`

All the above options can be called at once, for example:

{{{
./exec.sh -c src/config.ini -tsu
}}}

= Configuration =

A fifth option is the configuration option which provides all parameters necessary for smooth execution. The *config.ini* is a mandatory option in executing the BungeniGlueScript as it contains all the customizable parameters, temporary folder and output folder locations. The default parameters suffice but can be altered.